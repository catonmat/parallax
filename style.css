body {
  padding: 0;
  margin: 0;
  font-family: 'Playfair Display', serif; }

a {
  color: white;
  text-decoration: none; }
  a:visited {
    color: white; }

.footer i {
  font-size: 30px;
  margin: 5px; }
  .footer i:hover {
    font-weight: 900; }

.navbar-container {
  width: 100vw;
  height: 5vh;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: white;
  font-size: 1.25rem;
  position: fixed;
  top: 0;
  z-index: 5; }
  @media (max-width: 800px) {
    .navbar-container {
      font-size: 0.875rem; } }
  .navbar-container .title {
    margin-top: 0rem;
    margin-right: 0rem;
    margin-bottom: 0rem;
    margin-left: 1.25rem; }
  .navbar-container ul {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    list-style-type: none; }
    .navbar-container ul li {
      margin-top: 0rem;
      margin-right: 1.25rem;
      margin-bottom: 0rem;
      margin-left: 2.5rem; }
      .navbar-container ul li:hover {
        font-weight: 900;
        text-shadow: 0.03125rem 0.03125rem rgba(255, 255, 255, 0.1); }
      @media (max-width: 800px) {
        .navbar-container ul li {
          margin-top: 0rem;
          margin-right: 0.9375rem;
          margin-bottom: 0rem;
          margin-left: 0rem; } }

.parallax-wrapper {
  /* The height needs to be set to a fixed value for the effect to work.*/
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px; }

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  color: white;
  text-shadow: 0 0 5px #000; }

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1; }

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background-image: url("assets/images/cover-allprettiedup.png");
  background-size: cover;
  background-repeat: none; }

.bg2::after {
  background-image: url("assets/images/cover-alibi.png");
  background-size: cover;
  background-repeat: none; }

.bg3::after {
  background-image: url("assets/images/cover-thescene.png");
  background-size: cover;
  background-repeat: none; }

/* The styling for the static div. */
.static {
  background: black;
  height: 65vh;
  opacity: 0.5; }

.contact-section {
  background: black;
  height: 100vh; }

.lightbox {
  width: 100vw;
  height: 25vw;
  z-index: 10;
  display: flex;
  flex-wrap: none;
  flex-direction: row;
  overflow-y: scroll;
  position: relative;
  z-index: 10; }
  .lightbox img {
    margin: 10px;
    max-width: 500px;
    max-height: 500px;
    object-fit: cover; }

/*# sourceMappingURL=style.css.map */
